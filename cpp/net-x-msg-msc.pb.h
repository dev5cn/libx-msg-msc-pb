// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net-x-msg-msc.proto

#ifndef PROTOBUF_INCLUDED_net_2dx_2dmsg_2dmsc_2eproto
#define PROTOBUF_INCLUDED_net_2dx_2dmsg_2dmsc_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_net_2dx_2dmsg_2dmsc_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_net_2dx_2dmsg_2dmsc_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[5]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_net_2dx_2dmsg_2dmsc_2eproto();
class XmsgMscPubNeGroupStatusNotice;
class XmsgMscPubNeGroupStatusNoticeDefaultTypeInternal;
extern XmsgMscPubNeGroupStatusNoticeDefaultTypeInternal _XmsgMscPubNeGroupStatusNotice_default_instance_;
class XmsgMscSubNeGroupStatusReq;
class XmsgMscSubNeGroupStatusReqDefaultTypeInternal;
extern XmsgMscSubNeGroupStatusReqDefaultTypeInternal _XmsgMscSubNeGroupStatusReq_default_instance_;
class XmsgMscSubNeGroupStatusRsp;
class XmsgMscSubNeGroupStatusRspDefaultTypeInternal;
extern XmsgMscSubNeGroupStatusRspDefaultTypeInternal _XmsgMscSubNeGroupStatusRsp_default_instance_;
class XmsgMscSubNeGroupStatusRsp_NegEntry_DoNotUse;
class XmsgMscSubNeGroupStatusRsp_NegEntry_DoNotUseDefaultTypeInternal;
extern XmsgMscSubNeGroupStatusRsp_NegEntry_DoNotUseDefaultTypeInternal _XmsgMscSubNeGroupStatusRsp_NegEntry_DoNotUse_default_instance_;
class XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus;
class XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatusDefaultTypeInternal;
extern XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatusDefaultTypeInternal _XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus_default_instance_;
namespace google {
namespace protobuf {
template<> ::XmsgMscPubNeGroupStatusNotice* Arena::CreateMaybeMessage<::XmsgMscPubNeGroupStatusNotice>(Arena*);
template<> ::XmsgMscSubNeGroupStatusReq* Arena::CreateMaybeMessage<::XmsgMscSubNeGroupStatusReq>(Arena*);
template<> ::XmsgMscSubNeGroupStatusRsp* Arena::CreateMaybeMessage<::XmsgMscSubNeGroupStatusRsp>(Arena*);
template<> ::XmsgMscSubNeGroupStatusRsp_NegEntry_DoNotUse* Arena::CreateMaybeMessage<::XmsgMscSubNeGroupStatusRsp_NegEntry_DoNotUse>(Arena*);
template<> ::XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus* Arena::CreateMaybeMessage<::XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus>(Arena*);
}  // namespace protobuf
}  // namespace google

// ===================================================================

class XmsgMscSubNeGroupStatusReq :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgMscSubNeGroupStatusReq) */ {
 public:
  XmsgMscSubNeGroupStatusReq();
  virtual ~XmsgMscSubNeGroupStatusReq();

  XmsgMscSubNeGroupStatusReq(const XmsgMscSubNeGroupStatusReq& from);

  inline XmsgMscSubNeGroupStatusReq& operator=(const XmsgMscSubNeGroupStatusReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgMscSubNeGroupStatusReq(XmsgMscSubNeGroupStatusReq&& from) noexcept
    : XmsgMscSubNeGroupStatusReq() {
    *this = ::std::move(from);
  }

  inline XmsgMscSubNeGroupStatusReq& operator=(XmsgMscSubNeGroupStatusReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const XmsgMscSubNeGroupStatusReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgMscSubNeGroupStatusReq* internal_default_instance() {
    return reinterpret_cast<const XmsgMscSubNeGroupStatusReq*>(
               &_XmsgMscSubNeGroupStatusReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(XmsgMscSubNeGroupStatusReq* other);
  friend void swap(XmsgMscSubNeGroupStatusReq& a, XmsgMscSubNeGroupStatusReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgMscSubNeGroupStatusReq* New() const final {
    return CreateMaybeMessage<XmsgMscSubNeGroupStatusReq>(nullptr);
  }

  XmsgMscSubNeGroupStatusReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<XmsgMscSubNeGroupStatusReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const XmsgMscSubNeGroupStatusReq& from);
  void MergeFrom(const XmsgMscSubNeGroupStatusReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(XmsgMscSubNeGroupStatusReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string neg = 1;
  int neg_size() const;
  void clear_neg();
  static const int kNegFieldNumber = 1;
  const ::std::string& neg(int index) const;
  ::std::string* mutable_neg(int index);
  void set_neg(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_neg(int index, ::std::string&& value);
  #endif
  void set_neg(int index, const char* value);
  void set_neg(int index, const char* value, size_t size);
  ::std::string* add_neg();
  void add_neg(const ::std::string& value);
  #if LANG_CXX11
  void add_neg(::std::string&& value);
  #endif
  void add_neg(const char* value);
  void add_neg(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& neg() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_neg();

  // @@protoc_insertion_point(class_scope:XmsgMscSubNeGroupStatusReq)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField<::std::string> neg_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_net_2dx_2dmsg_2dmsc_2eproto;
};
// -------------------------------------------------------------------

class XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgMscSubNeGroupStatusRsp.XmsgMscNeStatus) */ {
 public:
  XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus();
  virtual ~XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus();

  XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus(const XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus& from);

  inline XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus& operator=(const XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus(XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus&& from) noexcept
    : XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus() {
    *this = ::std::move(from);
  }

  inline XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus& operator=(XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus* internal_default_instance() {
    return reinterpret_cast<const XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus*>(
               &_XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus* other);
  friend void swap(XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus& a, XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus* New() const final {
    return CreateMaybeMessage<XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus>(nullptr);
  }

  XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus& from);
  void MergeFrom(const XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string neg = 1;
  void clear_neg();
  static const int kNegFieldNumber = 1;
  const ::std::string& neg() const;
  void set_neg(const ::std::string& value);
  #if LANG_CXX11
  void set_neg(::std::string&& value);
  #endif
  void set_neg(const char* value);
  void set_neg(const char* value, size_t size);
  ::std::string* mutable_neg();
  ::std::string* release_neg();
  void set_allocated_neg(::std::string* neg);

  // string cgt = 2;
  void clear_cgt();
  static const int kCgtFieldNumber = 2;
  const ::std::string& cgt() const;
  void set_cgt(const ::std::string& value);
  #if LANG_CXX11
  void set_cgt(::std::string&& value);
  #endif
  void set_cgt(const char* value);
  void set_cgt(const char* value, size_t size);
  ::std::string* mutable_cgt();
  ::std::string* release_cgt();
  void set_allocated_cgt(::std::string* cgt);

  // uint64 uts = 4;
  void clear_uts();
  static const int kUtsFieldNumber = 4;
  ::google::protobuf::uint64 uts() const;
  void set_uts(::google::protobuf::uint64 value);

  // bool attached = 3;
  void clear_attached();
  static const int kAttachedFieldNumber = 3;
  bool attached() const;
  void set_attached(bool value);

  // @@protoc_insertion_point(class_scope:XmsgMscSubNeGroupStatusRsp.XmsgMscNeStatus)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr neg_;
  ::google::protobuf::internal::ArenaStringPtr cgt_;
  ::google::protobuf::uint64 uts_;
  bool attached_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_net_2dx_2dmsg_2dmsc_2eproto;
};
// -------------------------------------------------------------------

class XmsgMscSubNeGroupStatusRsp_NegEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<XmsgMscSubNeGroupStatusRsp_NegEntry_DoNotUse, 
    ::std::string, ::XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<XmsgMscSubNeGroupStatusRsp_NegEntry_DoNotUse, 
    ::std::string, ::XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  XmsgMscSubNeGroupStatusRsp_NegEntry_DoNotUse();
  XmsgMscSubNeGroupStatusRsp_NegEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const XmsgMscSubNeGroupStatusRsp_NegEntry_DoNotUse& other);
  static const XmsgMscSubNeGroupStatusRsp_NegEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const XmsgMscSubNeGroupStatusRsp_NegEntry_DoNotUse*>(&_XmsgMscSubNeGroupStatusRsp_NegEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class XmsgMscSubNeGroupStatusRsp :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgMscSubNeGroupStatusRsp) */ {
 public:
  XmsgMscSubNeGroupStatusRsp();
  virtual ~XmsgMscSubNeGroupStatusRsp();

  XmsgMscSubNeGroupStatusRsp(const XmsgMscSubNeGroupStatusRsp& from);

  inline XmsgMscSubNeGroupStatusRsp& operator=(const XmsgMscSubNeGroupStatusRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgMscSubNeGroupStatusRsp(XmsgMscSubNeGroupStatusRsp&& from) noexcept
    : XmsgMscSubNeGroupStatusRsp() {
    *this = ::std::move(from);
  }

  inline XmsgMscSubNeGroupStatusRsp& operator=(XmsgMscSubNeGroupStatusRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const XmsgMscSubNeGroupStatusRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgMscSubNeGroupStatusRsp* internal_default_instance() {
    return reinterpret_cast<const XmsgMscSubNeGroupStatusRsp*>(
               &_XmsgMscSubNeGroupStatusRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(XmsgMscSubNeGroupStatusRsp* other);
  friend void swap(XmsgMscSubNeGroupStatusRsp& a, XmsgMscSubNeGroupStatusRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgMscSubNeGroupStatusRsp* New() const final {
    return CreateMaybeMessage<XmsgMscSubNeGroupStatusRsp>(nullptr);
  }

  XmsgMscSubNeGroupStatusRsp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<XmsgMscSubNeGroupStatusRsp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const XmsgMscSubNeGroupStatusRsp& from);
  void MergeFrom(const XmsgMscSubNeGroupStatusRsp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(XmsgMscSubNeGroupStatusRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus XmsgMscNeStatus;

  // accessors -------------------------------------------------------

  // map<string, .XmsgMscSubNeGroupStatusRsp.XmsgMscNeStatus> neg = 1;
  int neg_size() const;
  void clear_neg();
  static const int kNegFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus >&
      neg() const;
  ::google::protobuf::Map< ::std::string, ::XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus >*
      mutable_neg();

  // @@protoc_insertion_point(class_scope:XmsgMscSubNeGroupStatusRsp)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      XmsgMscSubNeGroupStatusRsp_NegEntry_DoNotUse,
      ::std::string, ::XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > neg_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_net_2dx_2dmsg_2dmsc_2eproto;
};
// -------------------------------------------------------------------

class XmsgMscPubNeGroupStatusNotice :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:XmsgMscPubNeGroupStatusNotice) */ {
 public:
  XmsgMscPubNeGroupStatusNotice();
  virtual ~XmsgMscPubNeGroupStatusNotice();

  XmsgMscPubNeGroupStatusNotice(const XmsgMscPubNeGroupStatusNotice& from);

  inline XmsgMscPubNeGroupStatusNotice& operator=(const XmsgMscPubNeGroupStatusNotice& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  XmsgMscPubNeGroupStatusNotice(XmsgMscPubNeGroupStatusNotice&& from) noexcept
    : XmsgMscPubNeGroupStatusNotice() {
    *this = ::std::move(from);
  }

  inline XmsgMscPubNeGroupStatusNotice& operator=(XmsgMscPubNeGroupStatusNotice&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const XmsgMscPubNeGroupStatusNotice& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const XmsgMscPubNeGroupStatusNotice* internal_default_instance() {
    return reinterpret_cast<const XmsgMscPubNeGroupStatusNotice*>(
               &_XmsgMscPubNeGroupStatusNotice_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(XmsgMscPubNeGroupStatusNotice* other);
  friend void swap(XmsgMscPubNeGroupStatusNotice& a, XmsgMscPubNeGroupStatusNotice& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline XmsgMscPubNeGroupStatusNotice* New() const final {
    return CreateMaybeMessage<XmsgMscPubNeGroupStatusNotice>(nullptr);
  }

  XmsgMscPubNeGroupStatusNotice* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<XmsgMscPubNeGroupStatusNotice>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const XmsgMscPubNeGroupStatusNotice& from);
  void MergeFrom(const XmsgMscPubNeGroupStatusNotice& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(XmsgMscPubNeGroupStatusNotice* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string neg = 1;
  void clear_neg();
  static const int kNegFieldNumber = 1;
  const ::std::string& neg() const;
  void set_neg(const ::std::string& value);
  #if LANG_CXX11
  void set_neg(::std::string&& value);
  #endif
  void set_neg(const char* value);
  void set_neg(const char* value, size_t size);
  ::std::string* mutable_neg();
  ::std::string* release_neg();
  void set_allocated_neg(::std::string* neg);

  // string cgt = 2;
  void clear_cgt();
  static const int kCgtFieldNumber = 2;
  const ::std::string& cgt() const;
  void set_cgt(const ::std::string& value);
  #if LANG_CXX11
  void set_cgt(::std::string&& value);
  #endif
  void set_cgt(const char* value);
  void set_cgt(const char* value, size_t size);
  ::std::string* mutable_cgt();
  ::std::string* release_cgt();
  void set_allocated_cgt(::std::string* cgt);

  // uint64 uts = 4;
  void clear_uts();
  static const int kUtsFieldNumber = 4;
  ::google::protobuf::uint64 uts() const;
  void set_uts(::google::protobuf::uint64 value);

  // bool attached = 3;
  void clear_attached();
  static const int kAttachedFieldNumber = 3;
  bool attached() const;
  void set_attached(bool value);

  // @@protoc_insertion_point(class_scope:XmsgMscPubNeGroupStatusNotice)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr neg_;
  ::google::protobuf::internal::ArenaStringPtr cgt_;
  ::google::protobuf::uint64 uts_;
  bool attached_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_net_2dx_2dmsg_2dmsc_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// XmsgMscSubNeGroupStatusReq

// repeated string neg = 1;
inline int XmsgMscSubNeGroupStatusReq::neg_size() const {
  return neg_.size();
}
inline void XmsgMscSubNeGroupStatusReq::clear_neg() {
  neg_.Clear();
}
inline const ::std::string& XmsgMscSubNeGroupStatusReq::neg(int index) const {
  // @@protoc_insertion_point(field_get:XmsgMscSubNeGroupStatusReq.neg)
  return neg_.Get(index);
}
inline ::std::string* XmsgMscSubNeGroupStatusReq::mutable_neg(int index) {
  // @@protoc_insertion_point(field_mutable:XmsgMscSubNeGroupStatusReq.neg)
  return neg_.Mutable(index);
}
inline void XmsgMscSubNeGroupStatusReq::set_neg(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:XmsgMscSubNeGroupStatusReq.neg)
  neg_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void XmsgMscSubNeGroupStatusReq::set_neg(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:XmsgMscSubNeGroupStatusReq.neg)
  neg_.Mutable(index)->assign(std::move(value));
}
#endif
inline void XmsgMscSubNeGroupStatusReq::set_neg(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  neg_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:XmsgMscSubNeGroupStatusReq.neg)
}
inline void XmsgMscSubNeGroupStatusReq::set_neg(int index, const char* value, size_t size) {
  neg_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:XmsgMscSubNeGroupStatusReq.neg)
}
inline ::std::string* XmsgMscSubNeGroupStatusReq::add_neg() {
  // @@protoc_insertion_point(field_add_mutable:XmsgMscSubNeGroupStatusReq.neg)
  return neg_.Add();
}
inline void XmsgMscSubNeGroupStatusReq::add_neg(const ::std::string& value) {
  neg_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:XmsgMscSubNeGroupStatusReq.neg)
}
#if LANG_CXX11
inline void XmsgMscSubNeGroupStatusReq::add_neg(::std::string&& value) {
  neg_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:XmsgMscSubNeGroupStatusReq.neg)
}
#endif
inline void XmsgMscSubNeGroupStatusReq::add_neg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  neg_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:XmsgMscSubNeGroupStatusReq.neg)
}
inline void XmsgMscSubNeGroupStatusReq::add_neg(const char* value, size_t size) {
  neg_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:XmsgMscSubNeGroupStatusReq.neg)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
XmsgMscSubNeGroupStatusReq::neg() const {
  // @@protoc_insertion_point(field_list:XmsgMscSubNeGroupStatusReq.neg)
  return neg_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
XmsgMscSubNeGroupStatusReq::mutable_neg() {
  // @@protoc_insertion_point(field_mutable_list:XmsgMscSubNeGroupStatusReq.neg)
  return &neg_;
}

// -------------------------------------------------------------------

// XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus

// string neg = 1;
inline void XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus::clear_neg() {
  neg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus::neg() const {
  // @@protoc_insertion_point(field_get:XmsgMscSubNeGroupStatusRsp.XmsgMscNeStatus.neg)
  return neg_.GetNoArena();
}
inline void XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus::set_neg(const ::std::string& value) {
  
  neg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgMscSubNeGroupStatusRsp.XmsgMscNeStatus.neg)
}
#if LANG_CXX11
inline void XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus::set_neg(::std::string&& value) {
  
  neg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgMscSubNeGroupStatusRsp.XmsgMscNeStatus.neg)
}
#endif
inline void XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus::set_neg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  neg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgMscSubNeGroupStatusRsp.XmsgMscNeStatus.neg)
}
inline void XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus::set_neg(const char* value, size_t size) {
  
  neg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgMscSubNeGroupStatusRsp.XmsgMscNeStatus.neg)
}
inline ::std::string* XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus::mutable_neg() {
  
  // @@protoc_insertion_point(field_mutable:XmsgMscSubNeGroupStatusRsp.XmsgMscNeStatus.neg)
  return neg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus::release_neg() {
  // @@protoc_insertion_point(field_release:XmsgMscSubNeGroupStatusRsp.XmsgMscNeStatus.neg)
  
  return neg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus::set_allocated_neg(::std::string* neg) {
  if (neg != nullptr) {
    
  } else {
    
  }
  neg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), neg);
  // @@protoc_insertion_point(field_set_allocated:XmsgMscSubNeGroupStatusRsp.XmsgMscNeStatus.neg)
}

// string cgt = 2;
inline void XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus::clear_cgt() {
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus::cgt() const {
  // @@protoc_insertion_point(field_get:XmsgMscSubNeGroupStatusRsp.XmsgMscNeStatus.cgt)
  return cgt_.GetNoArena();
}
inline void XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus::set_cgt(const ::std::string& value) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgMscSubNeGroupStatusRsp.XmsgMscNeStatus.cgt)
}
#if LANG_CXX11
inline void XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus::set_cgt(::std::string&& value) {
  
  cgt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgMscSubNeGroupStatusRsp.XmsgMscNeStatus.cgt)
}
#endif
inline void XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus::set_cgt(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgMscSubNeGroupStatusRsp.XmsgMscNeStatus.cgt)
}
inline void XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus::set_cgt(const char* value, size_t size) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgMscSubNeGroupStatusRsp.XmsgMscNeStatus.cgt)
}
inline ::std::string* XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus::mutable_cgt() {
  
  // @@protoc_insertion_point(field_mutable:XmsgMscSubNeGroupStatusRsp.XmsgMscNeStatus.cgt)
  return cgt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus::release_cgt() {
  // @@protoc_insertion_point(field_release:XmsgMscSubNeGroupStatusRsp.XmsgMscNeStatus.cgt)
  
  return cgt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus::set_allocated_cgt(::std::string* cgt) {
  if (cgt != nullptr) {
    
  } else {
    
  }
  cgt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cgt);
  // @@protoc_insertion_point(field_set_allocated:XmsgMscSubNeGroupStatusRsp.XmsgMscNeStatus.cgt)
}

// bool attached = 3;
inline void XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus::clear_attached() {
  attached_ = false;
}
inline bool XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus::attached() const {
  // @@protoc_insertion_point(field_get:XmsgMscSubNeGroupStatusRsp.XmsgMscNeStatus.attached)
  return attached_;
}
inline void XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus::set_attached(bool value) {
  
  attached_ = value;
  // @@protoc_insertion_point(field_set:XmsgMscSubNeGroupStatusRsp.XmsgMscNeStatus.attached)
}

// uint64 uts = 4;
inline void XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus::clear_uts() {
  uts_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus::uts() const {
  // @@protoc_insertion_point(field_get:XmsgMscSubNeGroupStatusRsp.XmsgMscNeStatus.uts)
  return uts_;
}
inline void XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus::set_uts(::google::protobuf::uint64 value) {
  
  uts_ = value;
  // @@protoc_insertion_point(field_set:XmsgMscSubNeGroupStatusRsp.XmsgMscNeStatus.uts)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// XmsgMscSubNeGroupStatusRsp

// map<string, .XmsgMscSubNeGroupStatusRsp.XmsgMscNeStatus> neg = 1;
inline int XmsgMscSubNeGroupStatusRsp::neg_size() const {
  return neg_.size();
}
inline void XmsgMscSubNeGroupStatusRsp::clear_neg() {
  neg_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus >&
XmsgMscSubNeGroupStatusRsp::neg() const {
  // @@protoc_insertion_point(field_map:XmsgMscSubNeGroupStatusRsp.neg)
  return neg_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::XmsgMscSubNeGroupStatusRsp_XmsgMscNeStatus >*
XmsgMscSubNeGroupStatusRsp::mutable_neg() {
  // @@protoc_insertion_point(field_mutable_map:XmsgMscSubNeGroupStatusRsp.neg)
  return neg_.MutableMap();
}

// -------------------------------------------------------------------

// XmsgMscPubNeGroupStatusNotice

// string neg = 1;
inline void XmsgMscPubNeGroupStatusNotice::clear_neg() {
  neg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgMscPubNeGroupStatusNotice::neg() const {
  // @@protoc_insertion_point(field_get:XmsgMscPubNeGroupStatusNotice.neg)
  return neg_.GetNoArena();
}
inline void XmsgMscPubNeGroupStatusNotice::set_neg(const ::std::string& value) {
  
  neg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgMscPubNeGroupStatusNotice.neg)
}
#if LANG_CXX11
inline void XmsgMscPubNeGroupStatusNotice::set_neg(::std::string&& value) {
  
  neg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgMscPubNeGroupStatusNotice.neg)
}
#endif
inline void XmsgMscPubNeGroupStatusNotice::set_neg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  neg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgMscPubNeGroupStatusNotice.neg)
}
inline void XmsgMscPubNeGroupStatusNotice::set_neg(const char* value, size_t size) {
  
  neg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgMscPubNeGroupStatusNotice.neg)
}
inline ::std::string* XmsgMscPubNeGroupStatusNotice::mutable_neg() {
  
  // @@protoc_insertion_point(field_mutable:XmsgMscPubNeGroupStatusNotice.neg)
  return neg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgMscPubNeGroupStatusNotice::release_neg() {
  // @@protoc_insertion_point(field_release:XmsgMscPubNeGroupStatusNotice.neg)
  
  return neg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgMscPubNeGroupStatusNotice::set_allocated_neg(::std::string* neg) {
  if (neg != nullptr) {
    
  } else {
    
  }
  neg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), neg);
  // @@protoc_insertion_point(field_set_allocated:XmsgMscPubNeGroupStatusNotice.neg)
}

// string cgt = 2;
inline void XmsgMscPubNeGroupStatusNotice::clear_cgt() {
  cgt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& XmsgMscPubNeGroupStatusNotice::cgt() const {
  // @@protoc_insertion_point(field_get:XmsgMscPubNeGroupStatusNotice.cgt)
  return cgt_.GetNoArena();
}
inline void XmsgMscPubNeGroupStatusNotice::set_cgt(const ::std::string& value) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:XmsgMscPubNeGroupStatusNotice.cgt)
}
#if LANG_CXX11
inline void XmsgMscPubNeGroupStatusNotice::set_cgt(::std::string&& value) {
  
  cgt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:XmsgMscPubNeGroupStatusNotice.cgt)
}
#endif
inline void XmsgMscPubNeGroupStatusNotice::set_cgt(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:XmsgMscPubNeGroupStatusNotice.cgt)
}
inline void XmsgMscPubNeGroupStatusNotice::set_cgt(const char* value, size_t size) {
  
  cgt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:XmsgMscPubNeGroupStatusNotice.cgt)
}
inline ::std::string* XmsgMscPubNeGroupStatusNotice::mutable_cgt() {
  
  // @@protoc_insertion_point(field_mutable:XmsgMscPubNeGroupStatusNotice.cgt)
  return cgt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* XmsgMscPubNeGroupStatusNotice::release_cgt() {
  // @@protoc_insertion_point(field_release:XmsgMscPubNeGroupStatusNotice.cgt)
  
  return cgt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void XmsgMscPubNeGroupStatusNotice::set_allocated_cgt(::std::string* cgt) {
  if (cgt != nullptr) {
    
  } else {
    
  }
  cgt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cgt);
  // @@protoc_insertion_point(field_set_allocated:XmsgMscPubNeGroupStatusNotice.cgt)
}

// bool attached = 3;
inline void XmsgMscPubNeGroupStatusNotice::clear_attached() {
  attached_ = false;
}
inline bool XmsgMscPubNeGroupStatusNotice::attached() const {
  // @@protoc_insertion_point(field_get:XmsgMscPubNeGroupStatusNotice.attached)
  return attached_;
}
inline void XmsgMscPubNeGroupStatusNotice::set_attached(bool value) {
  
  attached_ = value;
  // @@protoc_insertion_point(field_set:XmsgMscPubNeGroupStatusNotice.attached)
}

// uint64 uts = 4;
inline void XmsgMscPubNeGroupStatusNotice::clear_uts() {
  uts_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 XmsgMscPubNeGroupStatusNotice::uts() const {
  // @@protoc_insertion_point(field_get:XmsgMscPubNeGroupStatusNotice.uts)
  return uts_;
}
inline void XmsgMscPubNeGroupStatusNotice::set_uts(::google::protobuf::uint64 value) {
  
  uts_ = value;
  // @@protoc_insertion_point(field_set:XmsgMscPubNeGroupStatusNotice.uts)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_net_2dx_2dmsg_2dmsc_2eproto
